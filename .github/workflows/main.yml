name: Django CI

on:
  push:
    branches: [ "main", "rostbranch" ]
  pull_request:
    branches: [ "main", "rostbranch" ]

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up Python (for Django + Bandit + coverage)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      # Install dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit coverage pytest pytest-cov

      # Run Bandit for security analysis
      - name: Run Bandit
        run: |
          bandit --format json --output $GITHUB_WORKSPACE/bandit-report.json --recursive $GITHUB_WORKSPACE/ || echo

      # Run coverage using coverage.py (Django compatible)
      - name: Run Coverage (coverage.py)
        run: |
          mkdir -p coverage-report
          coverage run manage.py test
          coverage xml -o coverage-report/coverage.xml
          coverage report

      # Optional: Run coverage with pytest-cov if using pytest
      - name: Run Coverage (pytest-cov)
        run: |
          mkdir -p coverage-report
          pytest --cov=. --cov-report=xml:coverage-report/cobertura.xml || true

      # Run Gitleaks using the CLI (to generate JSON report)
      - name: Run Gitleaks
        run: |
          curl -sSL https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-linux-amd64 -o gitleaks
          chmod +x gitleaks
          ./gitleaks detect --source . --report-format json --report-path gitleaks-report.json || true

      # Run SonarQube Scan
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.2.0
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=healthCheck
            -Dsonar.python.bandit.reportPaths=bandit-report.json
            -Dsonar.dependencyCheck.jsonReportPath=dependency-check-report.json
            -Dsonar.python.coverage.reportPaths=coverage-report/cobertura.xml
            -Dsonar.coverageReportPaths=coverage-report/coverage.xml
            -Dsonar.externalIssuesReportPaths=gitleaks-report.json
            -X
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_HEALTH_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
